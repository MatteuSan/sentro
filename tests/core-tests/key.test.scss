//--------------------------------------------------------------------
//  Copyright (c) 2024 Matteu
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//--------------------------------------------------------------------

@use 'pkg:@matteusan/sentro';
@use 'pkg:sass-true/sass/true';

@include true.describe('Key [module]') {
  :root {
    @include sentro.token-config((
      token: #f70
    ));
  }

  @include true.it('should create a key') {
    @include true.assert-equal(sentro.key-create('test-key', #f70), var(--test-key, #f70));
    @include true.assert-equal(sentro.key-create('test-key-2', 'token'), var(--test-key-2, var(--token)));
  }

  @include true.it('should retrieve a key') {
    @include true.assert-equal(sentro.key-get('test-key'), var(--test-key));
    @include true.assert-equal(sentro.key-get('test-key-2'), var(--test-key-2));
  }

  @include true.it('should retrieve a key\'s raw value') {
    @include true.assert-equal(sentro.key-get-raw('test-key'), #f70);
    @include true.assert-equal(sentro.key-get-raw('test-key-2'), #f70);
  }

  @include true.it('should check a key') {
    @include true.assert-true(sentro.key-check('test-key'));
    @include true.assert-false(sentro.key-check('text-key'));
  }

  @include true.it('should bind a key') {
    @include true.assert {
      @include true.output('test-component') {
        @include sentro.key-bind('test-key', #236);
      }
      @include true.expect('test-component') {
        --test-key: #236;
      }
    }
  }
}