//
// Copyright (c) 2021 Matteu
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

@use '../Feature';
@use 'sass:map';

$prefix-properties: (
    transition: (
        'webkit'
    ),
    box-shadow: (
        'webkit',
        'ms'
    ),
    background-clip: (
        'webkit'
    ),
    box-reflect: (
        'webkit'
    ),
    filter: (
        'webkit'
    ),
    word-break: (
        'ms'
    ),
    object-fit: (
        'o'
    ),
    transform: (
        'webkit',
        'ms'
    ),
    appearance: (
        'webkit',
        'moz'
    ),
    user-select: (
        'webkit',
        'moz',
        'ms'
    )
);

$prefix-values: ();

$_valid-prefixes: ('webkit', 'ms', 'moz', 'o');

@mixin prefix-property($property, $value, $targets: all) {
    
    @if not Feature.has-property($prefix-properties, $property) {
        
        #{$property}: $value;
        
    } @else {
        
        $_prefix-map: map.get($prefix-properties, $property);
        
        @each $prefix in $_prefix-map {
            #{'-' + $prefix + '-' + $property}: $value;
        }
        
        #{$property}: $value;
        
    }
    
}

@function prefix-value($property, $value, $targets: all) {
    
    //
    
}

// Retained for backwards compatability
@mixin prefix($property, $value, $targets: all) {
    
    @include prefix-property($property, $value, $targets);
    
}
